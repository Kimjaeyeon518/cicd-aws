name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      ########## start build ##########
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      #      - name: gradlew bootJar
      #        run: ./gradlew bootJar
      - name: Execute Gradle build
        run: ./gradlew clean build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      #      - name: build and release to DockerHub
      #        env:
      #          NAME: ${{ secrets.DOCKER_USERNAME }}
      #          APP: cicd-aws
      #        run: |
      #          docker build -t $NAME/$APP -f ./Dockerfile .
      #          docker push $NAME/$APP:latest
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: ${{ secrets.DOCKER_USERNAME }}/cicd-aws:latest
      ########## end build ##########

      ########## start deploy ##########
#      - name: Set permissions for private key
#        run: |
#          echo "${{ env.AWS_PRIVATE_KEY }}" > key.pem
#          chmod 600 key.pem
#      - name: Pull Docker image
#        run: |
#          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@54.167.94.228 'sudo docker pull your-dockerhub-username/cddemo:latest'
#      - name: Stop running container
#        run: |
#          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@54.167.94.228 'sudo docker stop cddemo || true'
#          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@54.167.94.228 'sudo docker rm cddemo || true'
#      - name: Run new container
#        run: |
#          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@54.167.94.228 'sudo docker run -d --name cddemo -p 80:3000 your-dockerhub-username/cddemo:latest'

      - name: SSH Commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            docker rm -f $(docker ps -qa)
            docker rmi jae518/cicd-aws:latest
            docker pull jae518/cicd-aws:latest
            docker-compose up -d

#            ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@54.167.94.228 'sudo docker-compose -f /root/docker-compose.yml down --rmi all'
#            ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@54.167.94.228 'sudo docker stop cicd-aws || true'
#            ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@54.167.94.228 'sudo docker rm cicd-aws || true'
#            ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@54.167.94.228 'sudo docker run -d --name cicd-aws -p 8080:8080 jae518/cicd-aws:latest'
#            kill -9 $(ps -ef | grep java | head -n 1 | awk '{print $2}')

      ########## end deploy ##########